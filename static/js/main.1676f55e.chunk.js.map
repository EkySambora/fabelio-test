{"version":3,"sources":["components/card/index.js","utils/helper/index.js","style.js","App.js","serviceWorker.js","index.js"],"names":["Cover","styled","div","Card","props","products","name","price","delivery_time","description","furniture_style","className","substring","toFixed","replace","toString","map","frs","i","key","Container","Box","Header","header","Products","Loading","Checkboxes","App","mapDataDeliveryTime","arr","state","item","push","sort","a","b","backToArray","Array","from","Set","setState","showCheckBoxes","checkBoxes","getValueCheck","e","newArrCheckBox","addValue","target","checked","searchTerm","value","pop","searchUpdated","furnitureStyles","type","Axios","get","res","data","dt","furniture_styles","this","sortArr","onChange","filteredProducts","filter","createFilter","Helmet","placeholder","data-set","onClick","readOnly","length","renderCheckBox","class","prod","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1676f55e.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { formatPrice } from 'utils'\nconst Card = (props) => {\n    const {name, price, delivery_time, description, furniture_style} = props.products\n\n    return (\n        <Cover>\n            <div className=\"title\">\n                <h3>{name.substring(0, 15)}</h3>\n                <p>Rp. {formatPrice(price)}</p>\n            </div>\n            <div className=\"description\">\n                <p className=\"desc\">{description.substring(0, 114)}...</p>\n\n                <div className=\"styles\">\n                    {furniture_style.map((frs,i)=> <p key={i}>{frs}, </p>)}\n                </div>\n\n                <div className=\"deliver\">\n                    <p>{delivery_time} Days</p>\n                </div>\n\n            </div>\n        </Cover>\n    )\n}\n\nconst Cover = styled.div`\n    width:42%;\n    padding:25px;\n    margin-top:20px;\n    border-radius: 7px;\n    -webkit-box-shadow: 1px 4px 9px -7px rgba(0,0,0,0.75);\n    -moz-box-shadow: 1px 4px 9px -7px rgba(0,0,0,0.75);\n    box-shadow: 1px 4px 9px -7px rgba(0,0,0,0.75);\n\n    .title{\n        display:flex;\n        justify-content: space-between;\n        p{\n            color:orange;\n            font-weight:bold;\n        }\n    }\n\n    .description{\n        .desc{\n            margin:10px 0;\n        }\n\n        .styles{\n            display:flex;\n            p{\n                color: #106cc8;\n            }\n        }\n\n        .deliver{\n            float:right;\n            p{\n                text-decoration:underline;\n                font-weight:bold;\n                cursor: pointer;\n                color: #106cc8;\n            }\n        }\n    }\n`;\n\n\nexport default Card;","export function formatPrice(value) {\n\tlet val = (value / 1).toFixed(0).replace('.', ',')\n\treturn val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  background: #fff;\n  margin-top: 20px;\n`;\n\nexport const Box = styled.div`\n  border: 1px solid #111;\n  width: 740px;\n  background: white;\n`;\n\nexport const Header = styled.header`\n    background-color: #106cc8;\n    width: 700px;\n    padding:20px;\n\n    .search{\n        width:100%;\n        display:block;\n        margin-bottom:20px;\n        input{\n            ::placeholder {\n                opacity: 1; \n                color:#fff;\n                font-size:20px;\n                font-weight:bold;\n            }\n            letter-spacing: -1px;\n            width:48.5%;\n            border:none;\n            background-color: #106cc8;\n            outline:none;\n            padding-top:10px;\n            padding-bottom:10px;\n            border-bottom:1px solid #fff;\n            color:#fff;\n            font-size:20px;\n            font-weight:bold;\n        }\n    }\n\n    .filter{\n        display:flex;\n        width: 100%;\n        justify-content: space-between; \n        .selectBox{\n            width: 49%;\n            /* margin-right:20px; */\n            border-bottom: 1px solid #fff;\n            padding-bottom:5px;\n            input{\n                width:-webkit-fill-available;\n                width:-moz-fill-available;\n                border:none;\n                padding:10px;\n                outline:none;\n                cursor: pointer;\n                ::placeholder { /* Chrome, Firefox, Opera, Safari 10.1+ */\n                    opacity: 1; /* Firefox */\n                    font-size:15px;\n                    color:grey;\n                }\n            }\n        }\n\n        .Delivery{\n            width:49%;\n            border-bottom: 1px solid #fff;\n            padding-bottom:5px;\n            position: relative;\n            .arrow {\n                width: 0; \n                height: 0; \n                border-left: 8px solid transparent;\n                border-right: 8px solid transparent;\n                border-top: 8px solid #123;\n                position: absolute;\n                    top:11px;\n                    right:9px;\n            }\n            select{\n                width:-webkit-fill-available;\n                width:-moz-fill-available;\n                width: 100%; \n                height: 100%; \n                /* height:33px; */\n                padding: 5px;\n                color: grey;\n                border:none;\n                outline:none;\n                cursor: pointer;\n                background-color:#fff;\n                border-radius:0;\n                appearance: none;\n                option { \n                    color: black; \n                    padding:10px;\n                    height:300px;\n                }\n                option:first-child{\n                    color: grey;\n\n                }\n            }\n        }\n    }\n`;  \n\nexport const Products = styled.div`\n    display:flex;\n    justify-content: space-between; \n    flex-wrap:wrap;\n    width: 700px;\n    padding: 0 20px 20px 20px;\n`;\n\nexport const Card = styled.div`\n    width:42%;\n    padding:25px;\n    margin-top:20px;\n    border-radius: 7px;\n    -webkit-box-shadow: 1px 4px 9px -7px rgba(0,0,0,0.75);\n    -moz-box-shadow: 1px 4px 9px -7px rgba(0,0,0,0.75);\n    box-shadow: 1px 4px 9px -7px rgba(0,0,0,0.75);\n\n    .title{\n        display:flex;\n        justify-content: space-between;\n        p{\n            color:orange;\n            font-weight:bold;\n        }\n    }\n\n    .description{\n        .desc{\n            margin:10px 0;\n        }\n\n        .styles{\n            display:flex;\n            p{\n                color: #106cc8;\n            }\n        }\n\n        .deliver{\n            float:right;\n            p{\n                text-decoration:underline;\n                font-weight:bold;\n                cursor: pointer;\n                color: #106cc8;\n            }\n        }\n    }\n`;\n\nexport const Loading = styled.div`\n    display: flex;\n    width: 100%;\n    height: 73vh;\n    align-items:center;\n    justify-content:center;\n    h5{\n        text-align:center;\n        font-size:20px;\n    }\n`;\n\nexport const Checkboxes = styled.div`\n    width: 322px;\n    background-color:#fff;\n    border: 1px solid grey;\n    padding:10px;\n    position:absolute;\n\n    /* The container */\n    .container {\n        display: block;\n        position: relative;\n        margin-bottom: 20px;\n        cursor: pointer;\n        font-size: 15px;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none;\n    }\n\n    /* Hide the browser's default checkbox */\n    .container input {\n        position: absolute;\n        opacity: 0;\n        cursor: pointer;\n        height: 0;\n        width: 0;\n    }\n\n    /* Create a custom checkbox */\n    .checkmark {\n        position: absolute;\n        top: 0;\n        right:0;\n        height: 20px;\n        width: 20px;\n        background-color: #eee;\n    }\n\n    /* On mouse-over, add a grey background color */\n    .container:hover input ~ .checkmark {\n        background-color: #ccc;\n    }\n\n    /* When the checkbox is checked, add a blue background */\n    .container input:checked ~ .checkmark {\n        background-color: #009688;\n    }\n\n    /* Create the checkmark/indicator (hidden when not checked) */\n    .checkmark:after {\n        content: \"\";\n        position: absolute;\n        display: none;\n    }\n\n    /* Show the checkmark when checked */\n    .container input:checked ~ .checkmark:after {\n        display: block;\n    }\n\n    /* Style the checkmark/indicator */\n    .container .checkmark:after {\n        left: 7px;\n        top: 2px;\n        width: 5px;\n        height: 10px;\n        border: solid white;\n        border-width: 0 3px 3px 0;\n        -webkit-transform: rotate(45deg);\n        -ms-transform: rotate(45deg);\n        transform: rotate(45deg);\n    }\n`;","import React, { Component } from 'react';\nimport Axios from 'axios';\nimport { Helmet } from 'react-helmet';\nimport Card from 'components/card';\nimport { \n  Container, \n  Box, \n  Header, \n  Products, \n  Loading,\n  Checkboxes\n} from './style';\n\nimport {createFilter} from 'react-search-input';\n//https://github.com/enkidevs/react-search-input\n\nconst baseUrl = \"https://www.mocky.io/v2/5c9105cb330000112b649af8\";\n\n class App extends Component {\n   constructor(props) {\n    super(props);\n      this.state = { \n        products: [],\n        delivery_time:[],\n        checkBoxes: false,\n        furnitureStyles: [],\n        newArrCheckBox:[],\n        searchTerm: '',\n        type: ''\n      }\n   }\n\n  async componentDidMount(){\n    const res = await Axios.get(baseUrl)\n    const dt = await res.data\n    const furnitureStyles = dt.furniture_styles\n    this.setState({products: dt.products})\n\n    let sortArr = Array.from(furnitureStyles).sort();\n    this.setState({furnitureStyles: sortArr})\n\n    this.mapDataDeliveryTime()\n  }\n\n  mapDataDeliveryTime = () => {\n    let arr = []\n    this.state.products.map((item) => {\n      // let changeNum = parseInt(item.delivery_time) \n      arr.push(item.delivery_time)\n      arr.sort((a, b) => a - b)\n      \n      return arr\n    })\n    // remove same value array\n    let backToArray = Array.from(new Set(arr));\n\n    return this.setState({delivery_time: backToArray})\n  }\n\n  showCheckBoxes = () => {\n    this.setState({checkBoxes: !this.state.checkBoxes})\n  }\n  getValueCheck = (item, e)=>{\n    let newArrCheckBox = this.state.newArrCheckBox;\n    let addValue = item;\n    \n    \n    if(e.target.checked ){\n      newArrCheckBox.push(addValue);\n      this.setState({newArrCheckBox:newArrCheckBox});\n      this.setState({searchTerm: e.target.value})\n    } else {\n      newArrCheckBox.pop();\n      this.setState({newArrCheckBox:newArrCheckBox});\n      this.setState({searchTerm: e.target.value})\n    }\n  }\n\n  renderCheckBox(){\n    if(this.state.checkBoxes){\n      return(\n        <Checkboxes>\n          {this.state.furnitureStyles.map((item,i)=> {\n            return (\n              <label key={i} className=\"container\">{item}\n                <input onChange={(e)=>this.getValueCheck(item,e)} type=\"checkbox\" value={item} />\n                <span className=\"checkmark\"></span>\n              </label>\n            )\n          })}\n        </Checkboxes>\n      )\n    }\n  }\n  searchUpdated = (e) => {\n    this.setState({searchTerm: e.target.value})\n  }\n\n  render() { \n    const KEYS_TO_FILTERS = ['name', 'description', 'price', 'delivery_time', 'furniture_style'];\n\n    // const KEYS_TO_FILTERS = [ 'delivery_time'];\n\n    const filteredProducts = this.state.products.filter(createFilter(this.state.searchTerm, KEYS_TO_FILTERS))\n    \n    return ( \n      <>\n        <Helmet>\n          <title>Fabelio Test</title>\n        </Helmet>\n        <Container>\n          <Box>\n            <Header>\n              <div className=\"search\">\n                <input type=\"text\" placeholder=\"Search Furniture\" data-set=\"seacrh\" onChange={this.searchUpdated} />\n              </div>\n\n              <div className=\"filter\">\n\n                <div className=\"selectBox\">\n                  <input \n                    onClick={this.showCheckBoxes}\n                    readOnly \n                    data-set=\"multiple\"\n                    type=\"text\" \n                    placeholder=\"Furniture Style\" \n                    value={this.state.newArrCheckBox.length ? this.state.newArrCheckBox : ''} \n                    />\n                  { this.showCheckBoxes ? this.renderCheckBox() : ''}\n                </div>\n\n                <div className=\"Delivery\">\n                  <select data-set=\"day\" onChange={(e)=>this.searchUpdated(e)}>\n                    <option value=\"\">Delivery Time</option>\n                    { this.state.delivery_time.map((item, i) => {\n                      return(\n                        <option key={i} value={item}>{item}</option>\n                      )\n                    })}\n                  </select>\n                  <i class=\"arrow down\"></i>\n                </div>\n\n              </div>\n            </Header>     \n            { this.state.products.length === 0 ? (\n              <Loading><h5>Loading ...</h5></Loading>) : (\n                <Products onClick={()=> this.setState({checkBoxes: false})}>\n                  { filteredProducts.map((prod, i) => <Card key={i} products={prod} /> )}\n                </Products>\n              )\n            }\n          </Box>\n        </Container>\n      </>\n    );\n  }\n }\n  \n export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}